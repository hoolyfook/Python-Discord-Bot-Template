import discord
from discord import app_commands
from discord.ext import commands
from discord.ext.commands import Context
from discord import Embed
import json
from datetime import datetime
import random
import asyncio
from database.mongodb import MongoDB
from utils.constants import CULTIVATION_LEVELS, LEVEL_REQUIREMENTS

class Couple(commands.Cog, name="couple"):
    def __init__(self, bot) -> None:
        self.bot = bot
        self._original_help_command = bot.help_command
        bot.help_command = None
        self.mongodb = MongoDB()
        self.cultivation_levels = CULTIVATION_LEVELS
        self.level_requirements = LEVEL_REQUIREMENTS

    def cog_unload(self):
        self.bot.help_command = self._original_help_command

    async def cog_check(self, ctx):
        if ctx.command.name == "help":
            # Danh s√°ch c√°c l·ªánh v√† m√¥ t·∫£
            commands_list = [
                {
                    "name": "üíç /cauhon [@ƒë·∫°o_h·ªØu]",
                    "description": "K·∫øt ƒë·∫°o h·ªØu th√†nh ƒë·∫°o l·ªØ, c√πng tu ti√™n luy·ªán ƒë·∫°o",
                    "color": 0xFF69B4
                },
                {
                    "name": "üíî /lyhon",
                    "description": "ƒêo·∫°n tuy·ªát ƒë·∫°o l·ªØ, t·ª´ nay m·ªói ng∆∞·ªùi m·ªôt ph∆∞∆°ng tr·ªùi tu luy·ªán",
                    "color": 0xFF4500
                },
                {
                    "name": "‚ù§Ô∏è /daolu",
                    "description": "Xem t√¨nh tr·∫°ng ƒë·∫°o l·ªØ c·ªßa b·∫£n th√¢n",
                    "color": 0xFF69B4
                },
                {
                    "name": "üìä /daolubang",
                    "description": "Hi·ªÉn th·ªã b·∫£ng x·∫øp h·∫°ng ƒë·∫°o l·ªØ d·ª±a tr√™n ƒë·ªô th√¢n m·∫≠t",
                    "color": 0xFF69B4
                },
                {
                    "name": "üéÅ /songtu",
                    "description": "T·∫∑ng qu√† cho ƒë·∫°o l·ªØ ƒë·ªÉ tƒÉng ƒëi·ªÉm th√¢n m·∫≠t",
                    "color": 0xFF69B4
                }
            ]
            
            # G·ª≠i t·ª´ng l·ªánh trong m·ªôt embed ri√™ng
            for cmd in commands_list:
                embed = discord.Embed(
                    title=cmd["name"],
                    description=cmd["description"],
                    color=cmd["color"]
                )
                embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
                await ctx.send(embed=embed)
            
            return False
        
        return True

    async def update_relationship(self, user_id: str, partner_id: str, intimacy_change: int) -> None:
        """C·∫≠p nh·∫≠t ƒëi·ªÉm th√¢n m·∫≠t cho c·∫∑p ƒë√¥i"""
        try:
            with open("database/relationships.json", "r", encoding="utf-8") as f:
                data = json.load(f)
            
            if user_id in data["relationships"]:
                data["relationships"][user_id]["intimacy"] += intimacy_change
            if partner_id in data["relationships"]:
                data["relationships"][partner_id]["intimacy"] += intimacy_change
            
            with open("database/relationships.json", "w", encoding="utf-8") as f:
                json.dump(data, f, indent=4)
        except Exception as e:
            self.bot.logger.error(f"L·ªói khi c·∫≠p nh·∫≠t relationship: {str(e)}")
            raise

    @commands.hybrid_command(
        name="daolu",
        aliases=["dl", "status", "tinhduyen"],
        description="Xem t√¨nh tr·∫°ng ƒë·∫°o l·ªØ c·ªßa b·∫£n th√¢n"
    )
    async def daolu(self, context: Context) -> None:
        """
        Xem t√¨nh tr·∫°ng ƒë·∫°o l·ªØ c·ªßa b·∫£n th√¢n
        """
        try:
            if not context.guild:
                embed = discord.Embed(
                    title="‚ùå Kh√¥ng Th·ªÉ Th·ª±c Hi·ªán",
                    description="Ch·ªâ c√≥ th·ªÉ xem t√¨nh tr·∫°ng ƒë·∫°o l·ªØ trong m√¥n ph√°i!",
                    color=0xFF4500
                )
                await context.send(embed=embed)
                return

            # ƒê·ªçc d·ªØ li·ªáu t·ª´ file relationships.json
            with open("database/relationships.json", "r", encoding="utf-8") as f:
                data = json.load(f)

            user_id = str(context.author.id)

            # Ki·ªÉm tra xem ng∆∞·ªùi d√πng c√≥ trong h·ªá th·ªëng kh√¥ng
            if user_id not in data["relationships"]:
                embed = discord.Embed(
                    title="üíò T√¨nh Duy√™n Ch∆∞a ƒê·∫øn",
                    description="Ng∆∞∆°i v·∫´n ch∆∞a c√≥ ƒë·∫°o l·ªØ.\nH√£y ti·∫øp t·ª•c tu luy·ªán, ch·ªù ƒë·ª£i l∆∞∆°ng duy√™n!",
                    color=0xFF69B4
                )
                embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
                await context.send(embed=embed)
                return

            partner_id = data["relationships"][user_id]["partner"]
            
            if partner_id == "None":
                embed = discord.Embed(
                    title="üíò T√¨nh Duy√™n Ch∆∞a ƒê·∫øn",
                    description="Ng∆∞∆°i v·∫´n ch∆∞a c√≥ ƒë·∫°o l·ªØ.\nH√£y ti·∫øp t·ª•c tu luy·ªán, ch·ªù ƒë·ª£i l∆∞∆°ng duy√™n!",
                    color=0xFF69B4
                )
                embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
                await context.send(embed=embed)
                return

            try:
                # L·∫•y th√¥ng tin ƒë·∫°o l·ªØ
                partner = await context.guild.fetch_member(int(partner_id))
                if not partner:
                    embed = discord.Embed(
                        title="‚ùå Kh√¥ng T√¨m Th·∫•y",
                        description="Kh√¥ng t√¨m th·∫•y ƒë·∫°o l·ªØ c·ªßa ng∆∞∆°i trong m√¥n ph√°i n√†y!",
                        color=0xFF4500
                    )
                    await context.send(embed=embed)
                    return

                # T√≠nh t·ªïng ƒëi·ªÉm th√¢n m·∫≠t
                total_intimacy = data["relationships"][user_id]["intimacy"]
                if partner_id in data["relationships"]:
                    total_intimacy += data["relationships"][partner_id]["intimacy"]

                # T√≠nh th·ªùi gian b√™n nhau
                since_date = datetime.fromisoformat(data["relationships"][user_id]["since"].replace("Z", "+00:00"))
                time_diff = datetime.now() - since_date
                days = time_diff.days

                # X√°c ƒë·ªãnh c·∫•p ƒë·ªô quan h·ªá d·ª±a tr√™n ƒëi·ªÉm th√¢n m·∫≠t
                relationship_level = "S∆° Giao Chi Giao"  # M·∫∑c ƒë·ªãnh
                if total_intimacy >= 10000:
                    relationship_level = "Ti√™n Th√™ Ti√™n Phu"
                elif total_intimacy >= 5000:
                    relationship_level = "ƒê·∫°o L·ªØ Song Tu"
                elif total_intimacy >= 2000:
                    relationship_level = "T√¢m √ù T∆∞∆°ng Th√¥ng"
                elif total_intimacy >= 1000:
                    relationship_level = "T√¨nh Tr∆∞·ªùng L·ªØ ƒêo·∫°n"

                embed = discord.Embed(
                    title="üíï T√¨nh Tr·∫°ng ƒê·∫°o L·ªØ",
                    description=f"**ƒê·∫°o L·ªØ c·ªßa {context.author.mention}**",
                    color=0xFF69B4
                )
                embed.add_field(
                    name="‚ù§Ô∏è ƒê·∫°o L·ªØ",
                    value=f"{partner.mention}",
                    inline=False
                )
                embed.add_field(
                    name="‚ú® C·∫•p ƒê·ªô Quan H·ªá",
                    value=relationship_level,
                    inline=True
                )
                embed.add_field(
                    name="üíù ƒêi·ªÉm Th√¢n M·∫≠t",
                    value=f"{total_intimacy:,} ƒëi·ªÉm",
                    inline=True
                )
                embed.add_field(
                    name="‚è≥ Th·ªùi Gian B√™n Nhau",
                    value=f"{days} ng√†y",
                    inline=True
                )
                embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")

                await context.send(embed=embed)

            except discord.NotFound:
                embed = discord.Embed(
                    title="‚ùå Kh√¥ng T√¨m Th·∫•y",
                    description="Kh√¥ng t√¨m th·∫•y ƒë·∫°o l·ªØ c·ªßa ng∆∞∆°i trong m√¥n ph√°i n√†y!",
                    color=0xFF4500
                )
                await context.send(embed=embed)

        except Exception as e:
            self.bot.logger.error(f"L·ªói trong l·ªánh daolu: {str(e)}")
            embed = discord.Embed(
                title="L·ªói",
                description=f"C√≥ l·ªói x·∫£y ra khi xem t√¨nh tr·∫°ng ƒë·∫°o l·ªØ: {str(e)}",
                color=0xFF4500
            )
            await context.send(embed=embed)

    @commands.hybrid_command(
        name="daolubang",
        aliases=["dlb", "daoluluc", "tinhduyenbang"],
        description="Hi·ªÉn th·ªã b·∫£ng x·∫øp h·∫°ng ƒë·∫°o l·ªØ d·ª±a tr√™n ƒë·ªô th√¢n m·∫≠t"
    )
    async def daolubang(self, context: Context) -> None:
        """
        Hi·ªÉn th·ªã b·∫£ng x·∫øp h·∫°ng ƒë·∫°o l·ªØ d·ª±a tr√™n ƒë·ªô th√¢n m·∫≠t
        """
        try:
            # Ki·ªÉm tra xem l·ªánh c√≥ ƒë∆∞·ª£c th·ª±c hi·ªán trong server kh√¥ng
            if not context.guild:
                embed = discord.Embed(
                    title="L·ªói",
                    description="L·ªánh n√†y ch·ªâ c√≥ th·ªÉ s·ª≠ d·ª•ng trong server!",
                    color=0xFF4500
                )
                embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
                await context.send(embed=embed)
                return

            # ƒê·ªçc d·ªØ li·ªáu t·ª´ file relationships.json
            with open("database/relationships.json", "r", encoding="utf-8") as f:
                data = json.load(f)
            
            # L·∫•y danh s√°ch c√°c c·∫∑p ƒë√¥i v√† t√≠nh ƒëi·ªÉm th√¢n m·∫≠t
            couples = []
            processed_ids = set()
            
            for user_id, info in data["relationships"].items():
                if user_id in processed_ids:
                    continue
                    
                partner_id = info["partner"]
                if partner_id != "None":
                    # T√≠nh t·ªïng ƒëi·ªÉm th√¢n m·∫≠t c·ªßa c·∫£ hai
                    total_intimacy = info["intimacy"]
                    if partner_id in data["relationships"]:
                        total_intimacy += data["relationships"][partner_id]["intimacy"]
                    
                    try:
                        # L·∫•y th√¥ng tin ng∆∞·ªùi d√πng
                        user = await context.guild.fetch_member(int(user_id))
                        partner = await context.guild.fetch_member(int(partner_id))
                        
                        if user and partner:
                            couples.append({
                                "user1": user,
                                "user2": partner,
                                "intimacy": total_intimacy,
                                "since": info["since"]
                            })
                            processed_ids.add(user_id)
                            processed_ids.add(partner_id)
                    except discord.NotFound:
                        # B·ªè qua n·∫øu kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng
                        continue
                    except discord.HTTPException as e:
                        self.bot.logger.error(f"L·ªói khi l·∫•y th√¥ng tin ng∆∞·ªùi d√πng: {str(e)}")
                        continue
            
            # S·∫Øp x·∫øp theo ƒëi·ªÉm th√¢n m·∫≠t gi·∫£m d·∫ßn
            couples.sort(key=lambda x: x["intimacy"], reverse=True)
            
            if not couples:
                embed = discord.Embed(
                    title="ƒê·∫°o L·ªØ B·∫£ng",
                    description="Ch∆∞a c√≥ c·∫∑p ƒë√¥i n√†o trong server!",
                    color=0xFF4500
                )
                embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
                await context.send(embed=embed)
                return

            # Chia th√†nh c√°c trang, m·ªói trang 10 c·∫∑p
            pages = []
            for i in range(0, len(couples), 10):
                page_couples = couples[i:i+10]
                embed = discord.Embed(
                    title="üíï ƒê·∫°o L·ªØ B·∫£ng",
                    description=f"Top {min(len(couples), 10)} c·∫∑p ƒë√¥i c√≥ ƒë·ªô th√¢n m·∫≠t cao nh·∫•t (Trang {len(pages) + 1})",
                    color=0xFF69B4
                )
                
                for j, couple in enumerate(page_couples, i + 1):
                    # Chuy·ªÉn ƒë·ªïi th·ªùi gian
                    since_date = datetime.fromisoformat(couple["since"].replace("Z", "+00:00"))
                    time_diff = datetime.now() - since_date
                    days = time_diff.days
                    
                    embed.add_field(
                        name=f"{j}. {couple['user1'].name} ‚ù§Ô∏è {couple['user2'].name}",
                        value=f"**ƒê·ªô Th√¢n M·∫≠t:** {couple['intimacy']:,} ƒëi·ªÉm\n**Quen nhau:** {days} ng√†y",
                        inline=False
                    )
                
                embed.set_footer(text=f"SpiritStone Bot | Trang {len(pages) + 1}/{(len(couples) + 9) // 10} | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
                pages.append(embed)

            # G·ª≠i trang ƒë·∫ßu ti√™n
            await context.send(embed=pages[0])
            
        except Exception as e:
            self.bot.logger.error(f"L·ªói trong l·ªánh daolu: {str(e)}")
            embed = discord.Embed(
                title="L·ªói",
                description=f"C√≥ l·ªói x·∫£y ra khi hi·ªÉn th·ªã ƒë·∫°o l·ªØ b·∫£ng: {str(e)}",
                color=0xFF4500
            )
            embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
            await context.send(embed=embed)

    @commands.hybrid_command(
        name="songtu",
        aliases=["st", "tangqua", "gift"],
        description="T·∫∑ng qu√† cho ƒë·∫°o l·ªØ c·ªßa b·∫°n ƒë·ªÉ tƒÉng ƒëi·ªÉm th√¢n m·∫≠t"
    )
    @commands.cooldown(1, 43200, commands.BucketType.user)  # 12 ti·∫øng cooldown
    async def songtu(self, context: Context) -> None:
        """
        T·∫∑ng qu√† cho ƒë·∫°o l·ªØ ƒë·ªÉ tƒÉng ƒëi·ªÉm th√¢n m·∫≠t
        """
        try:
            if not context.guild:
                embed = discord.Embed(
                    title="L·ªói",
                    description="L·ªánh n√†y ch·ªâ c√≥ th·ªÉ s·ª≠ d·ª•ng trong server!",
                    color=0xFF4500
                )
                await context.send(embed=embed)
                return

            # ƒê·ªçc d·ªØ li·ªáu t·ª´ file relationships.json
            with open("database/relationships.json", "r", encoding="utf-8") as f:
                data = json.load(f)

            user_id = str(context.author.id)

            # Ki·ªÉm tra xem ng∆∞·ªùi d√πng c√≥ ƒë·∫°o l·ªØ kh√¥ng
            if user_id not in data["relationships"] or \
               data["relationships"][user_id]["partner"] == "None":
                embed = discord.Embed(
                    title="L·ªói",
                    description="B·∫°n ch∆∞a c√≥ ƒë·∫°o l·ªØ!",
                    color=0xFF4500
                )
                await context.send(embed=embed)
                return

            partner_id = data["relationships"][user_id]["partner"]
            
            try:
                # L·∫•y th√¥ng tin ƒë·∫°o l·ªØ
                partner = await context.guild.fetch_member(int(partner_id))
                if not partner:
                    embed = discord.Embed(
                        title="L·ªói",
                        description="Kh√¥ng t√¨m th·∫•y ƒë·∫°o l·ªØ c·ªßa b·∫°n trong server n√†y!",
                        color=0xFF4500
                    )
                    await context.send(embed=embed)
                    return
            except discord.NotFound:
                embed = discord.Embed(
                    title="L·ªói",
                    description="Kh√¥ng t√¨m th·∫•y ƒë·∫°o l·ªØ c·ªßa b·∫°n trong server n√†y!",
                    color=0xFF4500
                )
                await context.send(embed=embed)
                return

            # T√≠nh ƒëi·ªÉm th√¢n m·∫≠t ng·∫´u nhi√™n (500-1000)
            intimacy_gain = random.randint(500, 1000)
            
            # C·∫≠p nh·∫≠t ƒëi·ªÉm th√¢n m·∫≠t
            await self.update_relationship(user_id, partner_id, intimacy_gain/2)

            # T·∫°o embed th√¥ng b√°o
            embed = discord.Embed(
                title="üéÅ T·∫∑ng Qu√†",
                color=0xFF69B4
            )
            embed.add_field(name="Ng∆∞·ªùi T·∫∑ng", value=context.author.mention, inline=False)
            embed.add_field(name="Ng∆∞·ªùi Nh·∫≠n", value=partner.mention, inline=False)
            embed.add_field(name="ƒêi·ªÉm Th√¢n M·∫≠t", value=f"+{intimacy_gain} ‚ù§Ô∏è", inline=False)
            embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")

            await context.send(embed=embed)

        except Exception as e:
            self.bot.logger.error(f"L·ªói trong l·ªánh songtu: {str(e)}")
            embed = discord.Embed(
                title="L·ªói",
                description=f"C√≥ l·ªói x·∫£y ra khi t·∫∑ng qu√†: {str(e)}",
                color=0xFF4500
            )
            await context.send(embed=embed)

    @commands.hybrid_command(
        name="cauhon",
        aliases=["ch", "propose", "kethon"],
        description="K·∫øt ƒë·∫°o h·ªØu th√†nh ƒë·∫°o l·ªØ, c√πng tu ti√™n luy·ªán ƒë·∫°o"
    )
    @app_commands.describe(
        member="ƒê·∫°o h·ªØu m√† ng∆∞∆°i mu·ªën k·∫øt th√†nh ƒë·∫°o l·ªØ"
    )
    async def cauhon(self, context: Context, member: discord.Member) -> None:
        """
        K·∫øt ƒë·∫°o h·ªØu th√†nh ƒë·∫°o l·ªØ, c√πng tu ti√™n luy·ªán ƒë·∫°o
        
        Parameters
        ----------
        member: ƒê·∫°o h·ªØu ƒë∆∞·ª£c c·∫ßu h√¥n
        """
        try:
            if not context.guild:
                embed = discord.Embed(
                    title="‚ùå Kh√¥ng Th·ªÉ Th·ª±c Hi·ªán",
                    description="Nghi th·ª©c k·∫øt ƒë·∫°o l·ªØ ch·ªâ c√≥ th·ªÉ th·ª±c hi·ªán trong m√¥n ph√°i!",
                    color=0xFF4500
                )
                await context.send(embed=embed)
                return

            if member.id == context.author.id:
                embed = discord.Embed(
                    title="‚ùå Kh√¥ng Th·ªÉ Th·ª±c Hi·ªán",
                    description="T·ª± k·∫øt ƒë·∫°o l·ªØ v·ªõi ch√≠nh m√¨nh? ƒê·∫°o h·ªØu ƒëi√™n r·ªìi sao?",
                    color=0xFF4500
                )
                await context.send(embed=embed)
                return

            if member.bot:
                embed = discord.Embed(
                    title="‚ùå Kh√¥ng Th·ªÉ Th·ª±c Hi·ªán",
                    description="Ng∆∞∆°i kh√¥ng th·ªÉ k·∫øt ƒë·∫°o l·ªØ v·ªõi m·ªôt kh√¥i l·ªói!",
                    color=0xFF4500
                )
                await context.send(embed=embed)
                return

            # ƒê·ªçc d·ªØ li·ªáu t·ª´ file relationships.json
            with open("database/relationships.json", "r", encoding="utf-8") as f:
                data = json.load(f)

            user_id = str(context.author.id)
            target_id = str(member.id)

            # Ki·ªÉm tra xem ng∆∞·ªùi c·∫ßu h√¥n ƒë√£ c√≥ ƒë·∫°o l·ªØ ch∆∞a
            if user_id in data["relationships"] and data["relationships"][user_id]["partner"] != "None":
                embed = discord.Embed(
                    title="‚ùå Kh√¥ng Th·ªÉ Th·ª±c Hi·ªán",
                    description="Ng∆∞∆°i ƒë√£ c√≥ ƒë·∫°o l·ªØ, sao d√°m ph·ª• l√≤ng ng∆∞·ªùi ta?",
                    color=0xFF4500
                )
                await context.send(embed=embed)
                return

            # Ki·ªÉm tra xem ng∆∞·ªùi ƒë∆∞·ª£c c·∫ßu h√¥n ƒë√£ c√≥ ƒë·∫°o l·ªØ ch∆∞a
            if target_id in data["relationships"] and data["relationships"][target_id]["partner"] != "None":
                embed = discord.Embed(
                    title="‚ùå Kh√¥ng Th·ªÉ Th·ª±c Hi·ªán",
                    description=f"{member.mention} ƒë√£ c√≥ ƒë·∫°o l·ªØ, ƒë·ª´ng ph√° ho·∫°i nh√¢n duy√™n c·ªßa ng∆∞·ªùi ta!",
                    color=0xFF4500
                )
                await context.send(embed=embed)
                return

            # T·∫°o embed th√¥ng b√°o c·∫ßu h√¥n
            embed = discord.Embed(
                title="üíç Thi√™n ƒê·ªãnh L∆∞∆°ng Duy√™n",
                description=f"H·ª°i {member.mention}!\n\n"
                          f"Ta {context.author.mention} th·∫•y ng∆∞∆°i ch√≠nh l√† c√≥ duy√™n v·ªõi ta!\n"
                          f"Kh√¥ng bi·∫øt ng∆∞∆°i c√≥ nguy·ªán k·∫øt ƒë·∫°o l·ªØ c√πng ta, song tu luy·ªán ƒë·∫°o?\n\n"
                          f"‚û§ ·∫§n ‚úÖ ƒë·ªÉ thu·∫≠n theo thi√™n √Ω\n"
                          f"‚û§ ·∫§n ‚ùå ƒë·ªÉ duy√™n ph·∫≠n l·ª° l√†ng",
                color=0xFF69B4
            )
            embed.set_footer(text="Th·ªùi h·∫°n suy nghƒ©: 60 gi√¢y | Duy√™n ph·∫≠n v√¥ th∆∞·ªùng, xin ƒë·ª´ng b·ªè l·ª°")

            # G·ª≠i tin nh·∫Øn v√† th√™m reactions
            message = await context.send(embed=embed)
            await message.add_reaction("‚úÖ")
            await message.add_reaction("‚ùå")

            def check(reaction, user):
                return user.id == member.id and str(reaction.emoji) in ["‚úÖ", "‚ùå"] and reaction.message.id == message.id

            try:
                # Ch·ªù ph·∫£n h·ªìi trong 60 gi√¢y
                reaction, user = await self.bot.wait_for("reaction_add", timeout=60.0, check=check)

                if str(reaction.emoji) == "‚úÖ":
                    # T·∫°o ho·∫∑c c·∫≠p nh·∫≠t d·ªØ li·ªáu cho c·∫£ hai ng∆∞·ªùi
                    current_time = datetime.now().isoformat()

                    if user_id not in data["relationships"]:
                        data["relationships"][user_id] = {"partner": "None", "intimacy": 0, "since": current_time}
                    if target_id not in data["relationships"]:
                        data["relationships"][target_id] = {"partner": "None", "intimacy": 0, "since": current_time}

                    # C·∫≠p nh·∫≠t partner cho c·∫£ hai
                    data["relationships"][user_id]["partner"] = target_id
                    data["relationships"][user_id]["since"] = current_time
                    data["relationships"][user_id]["intimacy"] = 0

                    data["relationships"][target_id]["partner"] = user_id
                    data["relationships"][target_id]["since"] = current_time
                    data["relationships"][target_id]["intimacy"] = 0

                    # L∆∞u d·ªØ li·ªáu
                    with open("database/relationships.json", "w", encoding="utf-8") as f:
                        json.dump(data, f, indent=4)

                    success_embed = discord.Embed(
                        title="üíï Thi√™n ƒê·ªãnh L∆∞∆°ng Duy√™n",
                        description=f"üéä Ch√∫c m·ª´ng! M·ªôt ƒë√¥i ƒë·∫°o l·ªØ m·ªõi ƒë√£ ƒë∆∞·ª£c thi√™n ƒë·ªãa ch·ª©ng gi√°m!\n\n"
                                  f"‚û§ {context.author.mention} v√† {member.mention} ƒë√£ k·∫øt th√†nh ƒë·∫°o l·ªØ\n"
                                  f"‚û§ T·ª´ nay v·ªÅ sau, hai ng∆∞·ªùi s·∫Ω c√πng nhau tu ti√™n, luy·ªán ƒë·∫°o\n"
                                  f"‚û§ Mong r·∫±ng ƒë√¥i ƒë·∫°o l·ªØ s·∫Ω s·ªõm ƒë·∫°t t·ªõi ƒë·ªânh cao v√µ ƒë·∫°o!",
                        color=0xFF69B4
                    )
                    await message.edit(embed=success_embed)
                else:
                    reject_embed = discord.Embed(
                        title="üíî Duy√™n Ph·∫≠n L·ª° L√†ng",
                        description=f"Ti·∫øc thay!\n\n"
                                  f"‚û§ {member.mention} ƒë√£ t·ª´ ch·ªëi l·ªùi c·∫ßu th√¢n c·ªßa {context.author.mention}\n"
                                  f"‚û§ C√≥ l·∫Ω duy√™n ph·∫≠n ch∆∞a ƒë·∫øn, ƒë·ª´ng qu√° bu·ªìn phi·ªÅn\n"
                                  f"‚û§ H√£y ti·∫øp t·ª•c tu luy·ªán, ch·ªù ƒë·ª£i l∆∞∆°ng duy√™n kh√°c!",
                        color=0xFF4500
                    )
                    await message.edit(embed=reject_embed)

            except asyncio.TimeoutError:
                timeout_embed = discord.Embed(
                    title="‚è∞ Duy√™n Ph·∫≠n Tr√¥i Qua",
                    description=f"Ti·∫øc thay!\n\n"
                              f"‚û§ {member.mention} ƒë√£ kh√¥ng ƒë√°p l·∫°i l·ªùi c·∫ßu th√¢n c·ªßa {context.author.mention}\n"
                              f"‚û§ C√≥ l·∫Ω th·ªùi c∆° ch∆∞a ƒë·∫øn\n"
                              f"‚û§ H√£y ti·∫øp t·ª•c tu luy·ªán, ch·ªù ƒë·ª£i c∆° duy√™n kh√°c!",
                    color=0xFF4500
                )
                await message.edit(embed=timeout_embed)

        except Exception as e:
            self.bot.logger.error(f"L·ªói trong l·ªánh cauhon: {str(e)}")
            embed = discord.Embed(
                title="L·ªói",
                description=f"C√≥ l·ªói x·∫£y ra trong nghi th·ª©c k·∫øt ƒë·∫°o l·ªØ: {str(e)}",
                color=0xFF4500
            )
            await context.send(embed=embed)

    @commands.hybrid_command(
        name="lyhon",
        aliases=["lh", "chiatay", "doandao"],
        description="ƒêo·∫°n tuy·ªát ƒë·∫°o l·ªØ, t·ª´ nay m·ªói ng∆∞·ªùi m·ªôt ph∆∞∆°ng tr·ªùi tu luy·ªán"
    )
    async def lyhon(self, context: Context) -> None:
        """
        ƒêo·∫°n tuy·ªát ƒë·∫°o l·ªØ, t·ª´ nay m·ªói ng∆∞·ªùi m·ªôt ph∆∞∆°ng tr·ªùi tu luy·ªán
        """
        try:
            if not context.guild:
                embed = discord.Embed(
                    title="‚ùå Kh√¥ng Th·ªÉ Th·ª±c Hi·ªán",
                    description="Nghi th·ª©c ƒëo·∫°n tuy·ªát ch·ªâ c√≥ th·ªÉ th·ª±c hi·ªán trong m√¥n ph√°i!",
                    color=0xFF4500
                )
                await context.send(embed=embed)
                return

            # ƒê·ªçc d·ªØ li·ªáu t·ª´ file relationships.json
            with open("database/relationships.json", "r", encoding="utf-8") as f:
                data = json.load(f)

            user_id = str(context.author.id)

            # Ki·ªÉm tra xem ng∆∞·ªùi d√πng c√≥ ƒë·∫°o l·ªØ kh√¥ng
            if user_id not in data["relationships"] or data["relationships"][user_id]["partner"] == "None":
                embed = discord.Embed(
                    title="‚ùå Kh√¥ng Th·ªÉ Th·ª±c Hi·ªán",
                    description="Ng∆∞∆°i l√†m g√¨ c√≥ ƒë·∫°o l·ªØ m√† ƒë√≤i ƒëo·∫°n tuy·ªát?",
                    color=0xFF4500
                )
                await context.send(embed=embed)
                return

            partner_id = data["relationships"][user_id]["partner"]
            
            try:
                # L·∫•y th√¥ng tin ƒë·∫°o l·ªØ
                partner = await context.guild.fetch_member(int(partner_id))
                if not partner:
                    embed = discord.Embed(
                        title="‚ùå Kh√¥ng Th·ªÉ Th·ª±c Hi·ªán",
                        description="Kh√¥ng t√¨m th·∫•y ƒë·∫°o l·ªØ c·ªßa ng∆∞∆°i trong m√¥n ph√°i n√†y!",
                        color=0xFF4500
                    )
                    await context.send(embed=embed)
                    return
            except discord.NotFound:
                embed = discord.Embed(
                    title="‚ùå Kh√¥ng Th·ªÉ Th·ª±c Hi·ªán",
                    description="Kh√¥ng t√¨m th·∫•y ƒë·∫°o l·ªØ c·ªßa ng∆∞∆°i trong m√¥n ph√°i n√†y!",
                    color=0xFF4500
                )
                await context.send(embed=embed)
                return

            # T·∫°o embed x√°c nh·∫≠n
            embed = discord.Embed(
                title="üíî ƒêo·∫°n Tuy·ªát Chi Th∆∞",
                description=f"H·ª°i {partner.mention}!\n\n"
                          f"Ta {context.author.mention} xin g·ª≠i ƒë·∫øn ng∆∞∆°i b·ª©c th∆∞ ƒëo·∫°n tuy·ªát n√†y.\n"
                          f"Duy√™n ph·∫≠n ƒë√£ h·∫øt, ƒë∆∞·ªùng ai n·∫•y tu.\n\n"
                          f"‚û§ ·∫§n ‚úÖ ƒë·ªÉ x√°c nh·∫≠n ƒëo·∫°n tuy·ªát\n"
                          f"‚û§ ·∫§n ‚ùå ƒë·ªÉ n√≠u k√©o duy√™n ph·∫≠n",
                color=0xFF4500
            )
            embed.set_footer(text="Th·ªùi h·∫°n suy nghƒ©: 60 gi√¢y | M·ªôt khi ƒëo·∫°n tuy·ªát, v·∫°n ki·∫øp kh√¥ng quay l·∫°i")

            # G·ª≠i tin nh·∫Øn v√† th√™m reactions
            message = await context.send(embed=embed)
            await message.add_reaction("‚úÖ")
            await message.add_reaction("‚ùå")

            def check(reaction, user):
                return user.id == int(partner_id) and str(reaction.emoji) in ["‚úÖ", "‚ùå"] and reaction.message.id == message.id

            try:
                # Ch·ªù ph·∫£n h·ªìi trong 60 gi√¢y
                reaction, user = await self.bot.wait_for("reaction_add", timeout=60.0, check=check)

                if str(reaction.emoji) == "‚úÖ":
                    # X√≥a th√¥ng tin ƒë·∫°o l·ªØ c·ªßa c·∫£ hai
                    data["relationships"][user_id]["partner"] = "None"
                    data["relationships"][user_id]["intimacy"] = 0
                    data["relationships"][partner_id]["partner"] = "None"
                    data["relationships"][partner_id]["intimacy"] = 0

                    # L∆∞u d·ªØ li·ªáu
                    with open("database/relationships.json", "w", encoding="utf-8") as f:
                        json.dump(data, f, indent=4)

                    final_embed = discord.Embed(
                        title="üíî Duy√™n T·∫≠n",
                        description=f"T·ª´ ƒë√¢y ƒë∆∞·ªùng ai n·∫•y ƒëi!\n\n"
                                  f"‚û§ {context.author.mention} v√† {partner.mention} ƒë√£ ch√≠nh th·ª©c ƒëo·∫°n tuy·ªát\n"
                                  f"‚û§ Mong hai v·ªã t·ª´ nay tinh ti·∫øn tu ƒë·∫°o\n"
                                  f"‚û§ H·ªØu duy√™n thi√™n l√Ω nƒÉng t∆∞∆°ng ng·ªô, v√¥ duy√™n ƒë·ªëi di·ªán b·∫•t t∆∞∆°ng ph√πng",
                        color=0xFF4500
                    )
                    await message.edit(embed=final_embed)
                else:
                    reject_embed = discord.Embed(
                        title="üíï Duy√™n Ch∆∞a D·ª©t",
                        description=f"C√≥ duy√™n g·∫∑p l·∫°i!\n\n"
                                  f"‚û§ {partner.mention} ƒë√£ kh√¥ng ƒë·ªìng √Ω ƒëo·∫°n tuy·ªát v·ªõi {context.author.mention}\n"
                                  f"‚û§ Mong hai v·ªã h√£y c√πng nhau h√≥a gi·∫£i hi·ªÉm c·∫£nh\n"
                                  f"‚û§ ƒê·∫°o l·ªØ ƒë·ªìng t√¢m, ph∆∞∆°ng c√≥ th·ªÉ ƒë·∫°i ƒë·∫°o vi√™n m√£n",
                        color=0xFF69B4
                    )
                    await message.edit(embed=reject_embed)

            except asyncio.TimeoutError:
                timeout_embed = discord.Embed(
                    title="‚è∞ Th·ªùi Gian Tr√¥i Qua",
                    description=f"Ti·∫øc thay!\n\n"
                              f"‚û§ {partner.mention} ƒë√£ kh√¥ng ph·∫£n h·ªìi th∆∞ ƒëo·∫°n tuy·ªát c·ªßa {context.author.mention}\n"
                              f"‚û§ C√≥ l·∫Ω c·∫ßn th√™m th·ªùi gian ƒë·ªÉ suy nghƒ©\n"
                              f"‚û§ H√£y c√πng nhau b√¨nh t√¢m, tƒ©nh tr√≠!",
                    color=0xFF4500
                )
                await message.edit(embed=timeout_embed)

        except Exception as e:
            self.bot.logger.error(f"L·ªói trong l·ªánh lyhon: {str(e)}")
            embed = discord.Embed(
                title="L·ªói",
                description=f"C√≥ l·ªói x·∫£y ra trong nghi th·ª©c ƒëo·∫°n tuy·ªát: {str(e)}",
                color=0xFF4500
            )
            await context.send(embed=embed)

async def setup(bot) -> None:
    await bot.add_cog(Couple(bot))
