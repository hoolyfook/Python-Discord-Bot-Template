import discord
from discord.ext import commands
from discord import Embed
from database.mongodb import mongodb
import random
import json
from datetime import datetime

class Mining(commands.Cog, name="Khai th√°c th·∫°ch"):
    def __init__(self, bot) -> None:
        self.bot = bot
        self.mining_rates = {
            0: {"success_rate": 0.05, "attempts": 3, "cooldown": 3600},  # Th∆∞·ªùng d√¢n
            1: {"success_rate": 0.10, "attempts": 4, "cooldown": 2700},  # Luy·ªán Kh√≠
            2: {"success_rate": 0.15, "attempts": 5, "cooldown": 1800},  # Tr√∫c C∆°
            3: {"success_rate": 0.20, "attempts": 6, "cooldown": 1500},  # Kim ƒêan
            4: {"success_rate": 0.25, "attempts": 7, "cooldown": 1200},  # Nguy√™n Anh
            5: {"success_rate": 0.30, "attempts": 8, "cooldown": 900},   # H√≥a Th·∫ßn
            6: {"success_rate": 0.35, "attempts": 9, "cooldown": 600},   # H·ª£p Th·ªÉ
            7: {"success_rate": 0.40, "attempts": 10, "cooldown": 300},  # ƒê·∫°i Th·ª´a
            8: {"success_rate": 0.50, "attempts": 12, "cooldown": 60}    # Ti√™n Nh√¢n
        }
        
        self.spirit_stones = {
            0: {"min": 100, "max": 500},    # H·∫° Ph·∫©m (Th∆∞·ªùng d√¢n)
            1: {"min": 500, "max": 1000},   # H·∫° Ph·∫©m (Luy·ªán Kh√≠)
            2: {"min": 1000, "max": 5000},  # Trung Ph·∫©m (Tr√∫c C∆°)
            3: {"min": 5000, "max": 10000}, # Trung Ph·∫©m (Kim ƒêan)
            4: {"min": 10000, "max": 50000},# Th∆∞·ª£ng Ph·∫©m (Nguy√™n Anh)
            5: {"min": 50000, "max": 100000},# Th∆∞·ª£ng Ph·∫©m (H√≥a Th·∫ßn)
            6: {"min": 100000, "max": 500000},# C·ª±c Ph·∫©m (H·ª£p Th·ªÉ)
            7: {"min": 500000, "max": 1000000},# C·ª±c Ph·∫©m (ƒê·∫°i Th·ª´a)
            8: {"min": 1000000, "max": 5000000} # Th·∫ßn Ph·∫©m (Ti√™n Nh√¢n)
        }

    async def ensure_user(self, user_id: str, username: str = None) -> None:
        user = await mongodb.get_user(user_id)
        if not user:
            user_data = {
                "_id": user_id,
                "username": username,
                "spirit_stones": 0,
                "cultivation_level": 0,
                "failed_rob_attempts": 0,
                "last_checkin": 0,
                "inventory": {},
                "cultivation_points": 0,
                "mining_attempts": 0,
                "last_mining": 0
            }
            await mongodb.update_user(user_id, user_data)
        elif username and user.get("username") != username:
            await mongodb.update_user(user_id, {"username": username})

    @commands.hybrid_command(
        name="khaithac",
        description="Khai th√°c Linh Th·∫°ch <:linhthachydon:1366455607812427807>"
    )
    async def khaithac(self, ctx: commands.Context) -> None:
        """
        Khai th√°c Linh Th·∫°ch
        """
        user_id = str(ctx.author.id)
        await self.ensure_user(user_id, username=ctx.author.name)
        user = await mongodb.get_user(user_id)
        
        # Ki·ªÉm tra th·ªùi gian ch·ªù
        current_time = datetime.now().timestamp()
        last_mining = user.get("last_mining", 0)
        mining_attempts = user.get("mining_attempts", 0)
        
        if current_time - last_mining < 1:
            remaining_time = 1 - (current_time - last_mining)
            seconds = int(remaining_time)
            await ctx.send(f"‚ùå B·∫°n c·∫ßn ch·ªù th√™m {seconds} gi√¢y n·ªØa m·ªõi c√≥ th·ªÉ khai th√°c!")
            return
            
        # Ki·ªÉm tra t·ª∑ l·ªá th√†nh c√¥ng
        if random.random() > 0.5:
            await mongodb.update_user(user_id, {
                "mining_attempts": mining_attempts + 1,
                "last_mining": current_time
            })
            await ctx.send("‚ùå Khai th√°c th·∫•t b·∫°i! Kh√¥ng t√¨m th·∫•y Linh Th·∫°ch.")
            return
            
        # T√≠nh to√°n s·ªë Linh Th·∫°ch nh·∫≠n ƒë∆∞·ª£c
        spirit_stones_found = random.randint(100, 500)
        
        # Ki·ªÉm tra n·∫øu ƒë√£ khai th√°c ƒë·ªß 100 l·∫ßn ƒë·ªÉ nh·∫≠n th∆∞·ªüng
        bonus_stones = 0
        if (mining_attempts + 1) % 100 == 0:
            bonus_stones = 1000
            spirit_stones_found += bonus_stones
        
        # C·∫≠p nh·∫≠t d·ªØ li·ªáu ng∆∞·ªùi d√πng
        await mongodb.update_user(user_id, {
            "spirit_stones": user.get("spirit_stones", 0) + spirit_stones_found,
            "mining_attempts": mining_attempts + 1,
            "last_mining": current_time
        })
        
        # T·∫°o embed th√¥ng b√°o
        embed = discord.Embed(
            title="Khai th√°c th√†nh c√¥ng!",
            description=f"B·∫°n ƒë√£ t√¨m th·∫•y {spirit_stones_found} Linh Th·∫°ch <:linhthachydon:1366455607812427807>",
            color=0x00FF00
        )
        
        if bonus_stones > 0:
            embed.add_field(
                name="üéâ Ph·∫ßn th∆∞·ªüng ƒë·∫∑c bi·ªát!",
                value=f"Ch√∫c m·ª´ng b·∫°n ƒë√£ khai th√°c ƒë·ªß 100 l·∫ßn!\nNh·∫≠n th√™m {bonus_stones} Linh Th·∫°ch!",
                inline=False
            )
            
        embed.add_field(name="S·ªë l·∫ßn khai th√°c", value=f"{mining_attempts + 1}", inline=True)
        await ctx.send(embed=embed)

async def setup(bot) -> None:
    await bot.add_cog(Mining(bot)) 