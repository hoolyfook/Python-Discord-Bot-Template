import time
from discord.ext import commands
from discord.ext.commands import Context
import random
import uuid
import discord
from datetime import datetime
from database.mongodb import mongodb
import logging
import aiosqlite
from database.mongodb import MongoDB
from utils.constants import CULTIVATION_LEVELS, LEVEL_REQUIREMENTS

logger = logging.getLogger(__name__)

class SpiritStone(commands.Cog, name="Linh Th·∫°ch"):
    def __init__(self, bot) -> None:
        self.bot = bot
        self.cultivation_levels = CULTIVATION_LEVELS
        self.level_requirements = LEVEL_REQUIREMENTS
        self.default_role_reward = 100
        self.mongodb = MongoDB()

    async def ensure_user(self, user_id: str, username: str = None) -> None:
        """ƒê·∫£m b·∫£o ng∆∞·ªùi d√πng t·ªìn t·∫°i trong database"""
        try:
            user = await mongodb.get_user(user_id)
            if not user:
                # Kh·ªüi t·∫°o ng∆∞·ªùi d√πng m·ªõi
                user_data = {
                    "_id": user_id,
                    "username": username,
                    "spirit_stones": 0,
                    "cultivation_level": 0,
                    "failed_rob_attempts": 0,
                    "last_checkin": 0,
                    "inventory": {},
                    "cultivation_points": 0,
                }
                await mongodb.update_user(user_id, user_data)
                logger.info(f"‚úÖ ƒê√£ kh·ªüi t·∫°o ng∆∞·ªùi d√πng m·ªõi: {username} ({user_id})")
            elif username and user["username"] != username:
                # C·∫≠p nh·∫≠t username n·∫øu thay ƒë·ªïi
                await mongodb.update_user(user_id, {"username": username})
                logger.info(f"‚úÖ ƒê√£ c·∫≠p nh·∫≠t username: {username} ({user_id})")
        except Exception as e:
            logger.error(f"‚ùå L·ªói khi kh·ªüi t·∫°o ng∆∞·ªùi d√πng {user_id}: {str(e)}")
            raise

    @commands.hybrid_command(
        name="diemdanh",
        description="ƒêi·ªÉm danh h√†ng ng√†y ƒë·ªÉ nh·∫≠n Linh Th·∫°ch theo ch·ª©c v·ª•"
    )
    @commands.cooldown(1, 86400, commands.BucketType.user)
    async def diemdanh(self, ctx: Context) -> None:
        user_id = str(ctx.author.id)
        guild_id = str(ctx.guild.id)
        await self.ensure_user(user_id, username=ctx.author.name)

        user = await mongodb.get_user(user_id)
        if not user:
            embed = discord.Embed(
                title="L·ªói ƒêi·ªÉm Danh",
                description="Kh√¥ng t√¨m th·∫•y th√¥ng tin ng∆∞·ªùi d√πng!",
                color=0xFF4500
            )
            embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
            await ctx.send(embed=embed)
            return

        current_time = int(time.time())
        
        if user["last_checkin"] and current_time - user["last_checkin"] < 86400:
            embed = discord.Embed(
                title="ƒêi·ªÉm Danh Th·∫•t B·∫°i",
                description="B·∫°n ƒë√£ ƒëi·ªÉm danh h√¥m nay! H√£y th·ª≠ l·∫°i sau 24 gi·ªù.",
                color=0xFF4500
            )
            embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
            await ctx.send(embed=embed)
            return

        reward_amount = self.default_role_reward
        user_roles = [role.id for role in ctx.author.roles]
        if user_roles:
            role_rewards = await mongodb.get_role_rewards(guild_id)
            for reward in role_rewards:
                if reward["role_id"] in user_roles:
                    reward_amount = max(reward_amount, reward["reward_amount"])

        await mongodb.update_user(user_id, {
            "spirit_stones": user["spirit_stones"] + reward_amount,
            "last_checkin": current_time
        })

        role_status = "T·∫°p V·ª•" if reward_amount == self.default_role_reward else "ch·ª©c v·ª• cao h∆°n"
        embed = discord.Embed(
            title="ƒêi·ªÉm Danh Th√†nh C√¥ng",
            description=f"B·∫°n nh·∫≠n ƒë∆∞·ª£c Linh Th·∫°ch d·ª±a tr√™n ch·ª©c v·ª• c·ªßa m√¨nh!",
            color=0x1E90FF
        )
        embed.add_field(name="Linh Th·∫°ch Nh·∫≠n ƒê∆∞·ª£c", value=f"**{reward_amount}**", inline=True)
        embed.add_field(name="Ch·ª©c V·ª•", value=f"**{role_status}**", inline=True)
        embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
        await ctx.send(embed=embed)

    @commands.hybrid_command(
        name="chuyen",
        description="Chuy·ªÉn Linh Th·∫°ch cho ng∆∞·ªùi kh√°c"
    )
    async def transfer(self, ctx: Context, member: commands.MemberConverter, amount: int) -> None:
        sender_id = str(ctx.author.id)
        receiver_id = str(member.id)

        if member.id == ctx.author.id:
            embed = discord.Embed(
                title="L·ªói Chuy·ªÉn Linh Th·∫°ch",
                description="Kh√¥ng th·ªÉ chuy·ªÉn Linh Th·∫°ch cho ch√≠nh m√¨nh!",
                color=0xFF4500
            )
            embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
            await ctx.send(embed=embed)
            return

        if amount <= 0:
            embed = discord.Embed(
                title="L·ªói Chuy·ªÉn Linh Th·∫°ch",
                description="S·ªë Linh Th·∫°ch ph·∫£i l·ªõn h∆°n 0!",
                color=0xFF4500
            )
            embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
            await ctx.send(embed=embed)
            return

        await self.ensure_user(sender_id, username=ctx.author.name)
        await self.ensure_user(receiver_id, username=member.name)

        sender = await mongodb.get_user(sender_id)
        if not sender:
            embed = discord.Embed(
                title="L·ªói Chuy·ªÉn Linh Th·∫°ch",
                description="Kh√¥ng t√¨m th·∫•y th√¥ng tin ng∆∞·ªùi g·ª≠i!",
                color=0xFF4500
            )
            embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
            await ctx.send(embed=embed)
            return

        if sender["spirit_stones"] < amount:
            embed = discord.Embed(
                title="L·ªói Chuy·ªÉn Linh Th·∫°ch",
                description="B·∫°n kh√¥ng ƒë·ªß Linh Th·∫°ch ƒë·ªÉ chuy·ªÉn!",
                color=0xFF4500
            )
            embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
            await ctx.send(embed=embed)
            return

        receiver = await mongodb.get_user(receiver_id)
        if not receiver:
            embed = discord.Embed(
                title="L·ªói Chuy·ªÉn Linh Th·∫°ch",
                description="Kh√¥ng t√¨m th·∫•y th√¥ng tin ng∆∞·ªùi nh·∫≠n!",
                color=0xFF4500
            )
            embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
            await ctx.send(embed=embed)
            return

        await mongodb.update_user(sender_id, {
            "spirit_stones": sender["spirit_stones"] - amount
        })
        await mongodb.update_user(receiver_id, {
            "spirit_stones": receiver["spirit_stones"] + amount
        })

        embed = discord.Embed(
            title="Chuy·ªÉn Linh Th·∫°ch Th√†nh C√¥ng",
            description=f"B·∫°n ƒë√£ chuy·ªÉn Linh Th·∫°ch cho {member.mention}!",
            color=0x1E90FF
        )
        embed.add_field(name="S·ªë Linh Th·∫°ch", value=f"**{amount}** ü™®", inline=True)
        embed.add_field(name="Ng∆∞·ªùi Nh·∫≠n", value=member.mention, inline=True)
        embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
        await ctx.send(embed=embed)

    @commands.hybrid_command(
        name="cuop",
        description="C∆∞·ªõp Linh Th·∫°ch t·ª´ ng∆∞·ªùi kh√°c"
    )
    @commands.cooldown(1, 10, commands.BucketType.user)  # 5 ph√∫t cooldown
    async def rob(self, ctx: Context) -> None:
        robber_id = str(ctx.author.id)
        await self.ensure_user(robber_id, username=ctx.author.name)

        # L·∫•y ng·∫´u nhi√™n m·ªôt ng∆∞·ªùi ch∆°i c√≥ Linh Th·∫°ch
        users = await mongodb.db.users.find({
            "spirit_stones": {"$gt": 0},
            "_id": {"$ne": robber_id}
        }).to_list(length=None)
        
        if not users:
            embed = discord.Embed(
                title="L·ªói C∆∞·ªõp",
                description="Kh√¥ng t√¨m th·∫•y m·ª•c ti√™u ƒë·ªÉ c∆∞·ªõp!",
                color=0xFF4500
            )
            embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
            await ctx.send(embed=embed)
            return

        target = random.choice(users)
        target_id = target["_id"]
        target_stones = target["spirit_stones"]
        target_level = target["cultivation_level"]

        robber = await mongodb.get_user(robber_id)
        if not robber:
            embed = discord.Embed(
                title="L·ªói C∆∞·ªõp",
                description="Kh√¥ng t√¨m th·∫•y th√¥ng tin ng∆∞·ªùi c∆∞·ªõp!",
                color=0xFF4500
            )
            embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
            await ctx.send(embed=embed)
            return

        robber_level = robber["cultivation_level"]
        failed_attempts = robber["failed_rob_attempts"]

        import math

        level_diff = robber_level - target_level

        if level_diff > 0:
            # Robber c·∫•p cao h∆°n
            success_rate = min(1.0, 0.5 + 0.2 * level_diff)  # Base 50%, m·ªói c·∫•p h∆°n +10%, t·ªëi ƒëa 100%
        elif level_diff < 0:
            # Robber c·∫•p th·∫•p h∆°n
            success_rate = math.exp(0.5 * level_diff)        # H√†m m≈© t·ª•t xu·ªëng
            success_rate = min(0.5, success_rate)            # Kh√¥ng qu√° 50%
        else:
            # B·∫±ng c·∫•p
            success_rate = 0.5
        
        if random.random() < success_rate:
            steal_amount = target_stones // 10
            if steal_amount <= 0:
                embed = discord.Embed(
                    title="L·ªói C∆∞·ªõp",
                    description="M·ª•c ti√™u qu√° ngh√®o, kh√¥ng c∆∞·ªõp ƒë∆∞·ª£c g√¨!",
                    color=0xFF4500
                )
                embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
                await ctx.send(embed=embed)
                return

            await mongodb.update_user(target_id, {
                "spirit_stones": target_stones - steal_amount
            })
            await mongodb.update_user(robber_id, {
                "spirit_stones": robber["spirit_stones"] + steal_amount,
                "failed_rob_attempts": 0
            })

            target_member = ctx.guild.get_member(int(target_id))
            if target_member:
                embed = discord.Embed(
                    title="C∆∞·ªõp Th√†nh C√¥ng",
                    description=f"B·∫°n ƒë√£ c∆∞·ªõp ƒë∆∞·ª£c {steal_amount} Linh Th·∫°ch t·ª´ {target_member.mention}!",
                    color=0x1E90FF
                )
                embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
                await ctx.send(embed=embed)
                try:
                    await target_member.send(f"‚ùå {ctx.author.mention} ƒë√£ c∆∞·ªõp {steal_amount} Linh Th·∫°ch c·ªßa b·∫°n!")
                except discord.Forbidden:
                    await ctx.send(f"‚ùå Kh√¥ng th·ªÉ g·ª≠i tin nh·∫Øn cho {target_member.mention} (DM b·ªã t·∫Øt).")
                except discord.HTTPException:
                    await ctx.send(f"‚ùå L·ªói khi g·ª≠i tin nh·∫Øn cho {target_member.mention}.")
            else:
                embed = discord.Embed(
                    title="C∆∞·ªõp Th√†nh C√¥ng",
                    description=f"B·∫°n ƒë√£ c∆∞·ªõp ƒë∆∞·ª£c {steal_amount} Linh Th·∫°ch t·ª´ <@{target_id}>!",
                    color=0x1E90FF
                )
                embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
                await ctx.send(embed=embed)
        else:
            failed_attempts += 1
            if failed_attempts >= 3:
                new_level = max(0, robber_level - 1)
                await mongodb.update_user(robber_id, {
                    "failed_rob_attempts": 0,
                    "cultivation_level": new_level
                })
                embed = discord.Embed(
                    title="C∆∞·ªõp Th·∫•t B·∫°i",
                    description=f"B·∫°n b·ªã ph·∫£n ph·ªá, tu vi gi·∫£m xu·ªëng **{self.cultivation_levels[new_level]}**!",
                    color=0xFF4500
                )
                embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
                await ctx.send(embed=embed)
            else:
                await mongodb.update_user(robber_id, {
                    "failed_rob_attempts": failed_attempts
                })
                embed = discord.Embed(
                    title="C∆∞·ªõp Th·∫•t B·∫°i",
                    description=f"C∆∞·ªõp th·∫•t b·∫°i!({failed_attempts}/3)! Y·∫øu c√≤n ra gi√≥!",
                    color=0xFF4500
                )
                embed = discord.Embed(
                    description=f"Targer: <@{robber_id}>",
                    color=0xFF4500
                )
                embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
                await ctx.send(embed=embed)

    @commands.hybrid_command(
        name="hoso",
        aliases=["profile", "info","tuvi"],
        description="Xem h·ªì s∆° tu luy·ªán c·ªßa b·∫£n th√¢n"
    )
    async def hoso(self, context: commands.Context) -> None:
        """
        Hi·ªÉn th·ªã h·ªì s∆° tu luy·ªán c·ªßa ng∆∞·ªùi d√πng
        """
        user_id = str(context.author.id)
        await self.ensure_user(user_id, username=context.author.name)
        
        user = await mongodb.get_user(user_id)
        if not user:
            embed = discord.Embed(
                title="L·ªói",
                description="Kh√¥ng t√¨m th·∫•y th√¥ng tin ng∆∞·ªùi d√πng!",
                color=0xFF4500
            )
            embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
            await context.send(embed=embed)
            return

        current_level = user.get("cultivation_level", 0)
        current_points = user.get("cultivation_points", 0)
        spirit_stones = user.get("spirit_stones", 0)
        mining_attempts = user.get("mining_attempts", 0)
        failed_rob_attempts = user.get("failed_rob_attempts", 0)

        # L·∫•y th√¥ng tin c·∫•p ƒë·ªô hi·ªán t·∫°i
        current_level_name = self.get_cultivation_info(current_level)
        
        # T√≠nh ƒëi·ªÉm tu vi c·∫ßn thi·∫øt cho c·∫•p ƒë·ªô ti·∫øp theo
        next_level = current_level + 1
        required_points = self.level_requirements.get(next_level, 0)
        points_needed = max(0, required_points - current_points)
        next_level_name = self.get_cultivation_info(next_level)

        embed = discord.Embed(
            title=f"H·ªì S∆° Tu Luy·ªán - {context.author.name}",
            description=f"**C·∫•p ƒë·ªô hi·ªán t·∫°i:** {current_level_name}",
            color=0x1E90FF
        )

        embed.add_field(
            name="üìä Th√¥ng Tin Tu Luy·ªán",
            value=f"**ƒêi·ªÉm tu vi hi·ªán t·∫°i:** {current_points:,}\n"
                  f"**C·∫•p ƒë·ªô ti·∫øp theo:** {next_level_name}\n"
                  f"**ƒêi·ªÉm tu vi c·∫ßn thi·∫øt:** {required_points:,}\n"
                  f"**C√≤n thi·∫øu:** {points_needed:,}",
            inline=False
        )

        embed.add_field(
            name="üí∞ T√†i Nguy√™n",
            value=f"**Linh Th·∫°ch:** {spirit_stones:,} ü™®",
            inline=False
        )

        embed.add_field(
            name="üìà Th·ªëng K√™",
            value=f"**S·ªë l·∫ßn khai th√°c:** {mining_attempts:,}\n"
                  f"**S·ªë l·∫ßn c∆∞·ªõp th·∫•t b·∫°i:** {failed_rob_attempts}/3",
            inline=False
        )

        embed.set_footer(text=f"SpiritStone Bot | {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
        await context.send(embed=embed)

    def get_cultivation_info(self, level):
        level_info = self.cultivation_levels.get(level, {
            "name": "Unknown",
            "color": 0xAAAAAA,
            "description": "C·∫£nh gi·ªõi kh√¥ng x√°c ƒë·ªãnh",
            "tho_nguyen": "Unknown"
        })
        return level_info["name"]

async def setup(bot) -> None:
    await bot.add_cog(SpiritStone(bot))